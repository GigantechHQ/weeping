// Generated by BUCKLESCRIPT VERSION 1.7.4, PLEASE EDIT WITH CARE
'use strict';

var List       = require("bs-platform/lib/js/list.js");
var $$Array    = require("bs-platform/lib/js/array.js");
var Block      = require("bs-platform/lib/js/block.js");
var Curry      = require("bs-platform/lib/js/curry.js");
var Js_json    = require("bs-platform/lib/js/js_json.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

function select(query, json) {
  var _json = json;
  var _query = query;
  while(true) {
    var query$1 = _query;
    var json$1 = _json;
    if (typeof query$1 === "number") {
      switch (query$1) {
        case 0 : 
            return /* None */0;
        case 1 : 
            var match = Js_json.reifyType(json$1);
            if (match[0] !== 4) {
              return /* None */0;
            } else {
              return /* Some */[+match[1]];
            }
        case 2 : 
            var match$1 = Js_json.reifyType(json$1);
            if (match$1[0] !== 1) {
              return /* None */0;
            } else {
              return /* Some */[match$1[1] | 0];
            }
        case 3 : 
            var match$2 = Js_json.reifyType(json$1);
            if (match$2[0] !== 1) {
              return /* None */0;
            } else {
              return /* Some */[match$2[1]];
            }
        case 4 : 
            var match$3 = Js_json.reifyType(json$1);
            if (match$3[0] !== 0) {
              return /* None */0;
            } else {
              return /* Some */[match$3[1]];
            }
        
      }
    } else if (query$1.tag) {
      return Curry._1(query$1[0], json$1);
    } else {
      var match$4 = Js_json.reifyType(json$1);
      if (match$4[0] !== 2) {
        return /* None */0;
      } else {
        var match$5 = match$4[1][query$1[0]];
        if (match$5 !== undefined) {
          _query = query$1[1];
          _json = match$5;
          continue ;
          
        } else {
          return /* None */0;
        }
      }
    }
  };
}

function select_option_list(query, json) {
  var match = Js_json.reifyType(json);
  if (match[0] !== 3) {
    return /* None */0;
  } else {
    return /* Some */[List.rev(List.rev_map(function (param) {
                      return select(query, param);
                    }, $$Array.to_list(match[1])))];
  }
}

function select_list(query, json) {
  var match = Js_json.reifyType(json);
  if (match[0] !== 3) {
    return /* None */0;
  } else {
    return /* Some */[List.fold_left(function (acc, param) {
                  if (param) {
                    return /* :: */[
                            param[0],
                            acc
                          ];
                  } else {
                    return acc;
                  }
                }, /* [] */0, List.rev_map(function (param) {
                      return select(query, param);
                    }, $$Array.to_list(match[1])))];
  }
}

function select_tuple2(param, json) {
  var match = Js_json.reifyType(json);
  if (match[0] !== 3) {
    return /* None */0;
  } else {
    var arr = match[1];
    if (arr.length > 1) {
      var match$1 = select(param[0], Caml_array.caml_array_get(arr, 0));
      var match$2 = select(param[1], Caml_array.caml_array_get(arr, 1));
      if (match$1 && match$2) {
        return /* Some */[/* tuple */[
                  match$1[0],
                  match$2[0]
                ]];
      } else {
        return /* None */0;
      }
    } else {
      return /* None */0;
    }
  }
}

function prop(key, kind) {
  return /* Object */Block.__(0, [
            key,
            kind
          ]);
}

function path(keys, kind) {
  if (keys) {
    return /* Object */Block.__(0, [
              keys[0],
              path(keys[1], kind)
            ]);
  } else {
    return kind;
  }
}

function $less$pipe(json, query) {
  return select(query, json);
}

function $less$pipe$pipe(json, query) {
  return select_list(query, json);
}

function $less$pipe$pipe$unknown(json, query) {
  return select_option_list(query, json);
}

function $less$pipe$star(json, param) {
  return select_tuple2(/* tuple */[
              param[0],
              param[1]
            ], json);
}

var Operator = /* module */[
  /* <| */$less$pipe,
  /* <|| */$less$pipe$pipe,
  /* <||? */$less$pipe$pipe$unknown,
  /* <|* */$less$pipe$star
];

function $great$great$eq(a, f) {
  if (a) {
    return Curry._1(f, a[0]);
  } else {
    return /* None */0;
  }
}

function $less$$great(a, f) {
  if (a) {
    return /* Some */[Curry._1(f, a[0])];
  } else {
    return /* None */0;
  }
}

function $less$star$great(af, a) {
  if (af && a) {
    return /* Some */[Curry._1(af[0], a[0])];
  } else {
    return /* None */0;
  }
}

var Option = /* module */[
  /* >>= */$great$great$eq,
  /* <$> */$less$$great,
  /* <*> */$less$star$great
];

exports.select             = select;
exports.select_option_list = select_option_list;
exports.select_list        = select_list;
exports.select_tuple2      = select_tuple2;
exports.prop               = prop;
exports.path               = path;
exports.Operator           = Operator;
exports.Option             = Option;
/* No side effect */
